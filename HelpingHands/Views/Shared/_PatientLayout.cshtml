@inject IHttpContextAccessor contextAccessor;

@{
    var userName = Context.Session.GetString("UserName");
    var surname = Context.Session.GetString("Surname");
    var firstName = Context.Session.GetString("FirstName");
}
<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.1/css/all.css">
    
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Administrator</title>
    <link rel="stylesheet" href="~/css/userstysheet.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/ToastDemo.styles.css" asp-append-version="true" />
    <style>


        .wrapper .sidebar {
            left: 0;
            width: 225px;
            height: 100%;
        }



        .parent-li {
            position: relative;
        }

        .sub-menu {
            display: none;
        }

        .sub-menu {
            position: absolute;
            top: 0;
            left: 100%;
            background-color: rgb(5, 68, 104);
            border: 1px solid #ccc;
            padding: 10px;
            list-style: none;
            margin: 0;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
            width: 200px;
        }

        .parent-li:hover .sub-menu,
        .parent-li:focus-within .sub-menu {
            display: block;
        }

    </style>
</head>
<body>

    <div class="wrapper">
        <div class="section">
            <div class="top_navbar">
                <div class="hamburger">
                    <a href="#">
                        <i class="fas fa-bars"></i>
                    </a>
                </div>
            </div>

        </div>
        <div class="sidebar">
            <div class="profile">
                
                @{
                    var pictureData = Context.Session.Get("Picture");
                    var imageDataUrl = string.Empty;

                    if (pictureData != null)
                    {
                        var imageBase64Data = Convert.ToBase64String(pictureData);
                        imageDataUrl = string.Format("data:image/jpg;base64,{0}", imageBase64Data);
                    }
                    else
                    {
                        imageDataUrl = "wwwroot/css/Default.jpg";
                    }
                }

                <img src="@imageDataUrl" width="150" height="150" class="rounded-circle" />
                
                @if (string.IsNullOrEmpty(firstName) && string.IsNullOrEmpty(surname))
                {
                    <p>User Name: @userName</p>
                }
                else
                {

                    <h3 style="display: inline; margin-right: 10px;">@(string.IsNullOrEmpty(firstName) ? "" : firstName)</h3>
                    <h3 style="display: inline;">@(string.IsNullOrEmpty(surname) ? "" : surname)</h3>

                }
                <p>@Context.Session.GetString("UserTypeDescription")</p>
            </div>
          
                
         
            <ul>
                
                <li>
                    <a asp-controller="Dashboard" asp-action="Patient">
                        <span class="icon"><i class="fas fa-desktop"></i></span>
                        <span class="item">Dashboard</span>
                    </a>
                </li>
                <li class="parent-li">
                    <a href="#">
                        <span class="icon"><i class='fas fa-user-edit'></i></span>
                        <span class="item">Profile</span>
                    </a>
                    <ul class="sub-menu">
                                                  
                        <li><a asp-controller="User" asp-action="GetPatientProfile">Profile</a></li>
                        <li><a asp-controller="User" asp-action="ChangePatientPassword">Change Password</a></li>
                            
                    </ul>
                </li>
               
                <li class="parent-li">
                    <a href="#">
                        <span class="icon"><i class="fa fa-heartbeat"></i></span>
                        <span class="item">Conditions</span>
                    </a>
                    <ul class="sub-menu">
                        <li><a asp-controller="PatientCondition" asp-action="CreatePatientCondition">Add Conditions</a></li>
                        <li><a asp-controller="PatientCondition" asp-action="Index">My Conditions</a></li>

                    </ul>
                </li>
                <li class="parent-li">
                    <a>
                        <span class="icon"><i class='fas fa-file-contract'></i></span>
                        <span class="item">Contract</span>
                    </a>
                    <ul class="sub-menu">
                        <li><a asp-controller="Contract" asp-action="CreateContract">Create Contract</a></li>
                        <li><a asp-controller="Contract" asp-action="GetPatientContract">View Contracts</a></li>
                        

                    </ul>
                </li>
                
               
                <li>
                    <a asp-controller="User" asp-action="Login">
                        <span class="icon"><i class="fa fa-arrow-circle-o-left"></i></span>
                        <span class="item">Logout</span>
                    </a>
                </li>
            </ul>
        </div>
        <div class="container">

            @RenderBody()
        </div>

    </div>
    <script>
        var hamburger = document.querySelector(".hamburger");
        hamburger.addEventListener("click", function () {
            document.querySelector("body").classList.toggle("active");
        })
    </script>
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" ></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" ></script>
    @await RenderSectionAsync("Scripts", required: false)
    @await Component.InvokeAsync("Notyf")
</body>
</html>


